name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          files: |
            custom_components/**/*
            README.md
            LICENSE
            CHANGELOG.md
          body: |
            ## üê∂ Hundesystem Release ${{ github.ref_name }}
            
            ### What's New
            See the [CHANGELOG.md](https://github.com/Bigdaddy1990/hundesystem/blob/main/CHANGELOG.md) for detailed changes.
            
            ### Installation
            1. Download and extract the release
            2. Copy `custom_components/hundesystem` to your Home Assistant `custom_components` directory
            3. Restart Home Assistant
            4. Add the integration via Settings ‚Üí Devices & Services
            
            ### HACS Installation
            1. Add this repository as a custom repository in HACS
            2. Search for "Hundesystem" and install
            3. Restart Home Assistant
            
            ### Support
            - üêõ [Report Issues](https://github.com/Bigdaddy1990/hundesystem/issues)
            - üí¨ [Discussions](https://github.com/Bigdaddy1990/hundesystem/discussions)
            - üìñ [Documentation](https://github.com/Bigdaddy1990/hundesystem#readme)

---

name: Validate

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install homeassistant==2024.1.0
          pip install pytest pytest-homeassistant-custom-component
          
      - name: Python Syntax Check
        run: |
          python -m py_compile custom_components/hundesystem/*.py
          
      - name: HACS Validation
        uses: hacs/action@main
        with:
          category: integration
          
      - name: Lint with flake8
        run: |
          pip install flake8
          # Stop the build if there are Python syntax errors or undefined names
          flake8 custom_components/hundesystem --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings
          flake8 custom_components/hundesystem --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  test:
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install homeassistant==2024.1.0
          pip install pytest pytest-homeassistant-custom-component
          pip install pytest-cov
          
      - name: Run tests
        run: |
          pytest tests/ --cov=custom_components.hundesystem --cov-report=xml --cov-report=term-missing
          
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

---

name: HACS Validation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: "0 2 * * *"  # Run daily at 2 AM

jobs:
  hacs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: HACS validation
        uses: hacs/action@main
        with:
          category: integration
          
  hassfest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Hassfest validation
        uses: home-assistant/actions/hassfest@master

---

name: Pre-commit

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  pre-commit:
    name: Run pre-commit hooks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit

      - name: Cache pre-commit environments
        uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pre-commit-

      - name: Run pre-commit
        run: pre-commit run --all-files
